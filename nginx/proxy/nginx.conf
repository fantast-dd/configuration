user  www www;

worker_processes auto;
#worker_cpu_affinity 01 10;

error_log  /storage/log/nginx_error.log  warn;
pid        logs/nginx.pid;

worker_rlimit_nofile 65535;

events
{
        use epoll;
        worker_connections 65535;
        accept_mutex off;
        multi_accept on;
}

http
{
        include       mime.types;
        default_type text/html;
        #default_type  application/octet-stream;
        #charset  UTF-8;

        server_names_hash_bucket_size 128;
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        client_max_body_size 2000m;
        client_body_buffer_size  128k;

        #sendfile on;
        tcp_nopush     on;
        tcp_nodelay on;
        server_tokens off;

        keepalive_timeout 10;
        client_header_timeout 10;
        client_body_timeout 10;
        reset_timedout_connection on;
        send_timeout 10;

        #limit_conn_zone $binary_remote_addr zone=addr:10m;
        #limit_conn addr 100;

        proxy_connect_timeout    60;
        proxy_read_timeout       60;
        proxy_send_timeout       600;
        proxy_buffer_size        16k;
        proxy_buffers            4 32k;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 64k;

        #add_header Vary Accept-Encoding;
        add_header X-Server $hostname;

        gzip on;
        gzip_disable "msie6";
        #gzip_static on;
        gzip_proxied any;
        gzip_min_length  1k;
        gzip_buffers     4 16k;
        gzip_http_version 1.0;
        gzip_comp_level 2;
        gzip_types  text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_vary on;

        log_format  access  '$remote_addr    $time_local     $server_protocol        $request_method $host$request_uri       |$status|       $body_bytes_sent        "$http_referer" "$http_user_agent"      $upstream_addr  $upstream_response_time $upstream_status';
        #access_log  off;
        access_log  /storage/log/access.log access buffer=8k;

        server
        {
                listen       80;
                server_name localhost;
                access_log  off;
                location / {
                        return 404;
                }
                location /statusx35 {
                        stub_status on;
                }
        }

	include conf.d/*.conf; 
}
